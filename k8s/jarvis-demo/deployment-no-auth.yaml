---
# CloudWatch MCP Server Deployment for Jarvis Demo (Testing - No User Authentication)
# Uses existing AWS user credentials for testing
# No OIDC user authentication, no IRSA roles needed

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudwatch-mcp
  namespace: jarvis-demo
  labels:
    app: cloudwatch-mcp
    component: mcp-server
    service: cloudwatch
spec:
  replicas: 1  # Single replica for testing
  selector:
    matchLabels:
      app: cloudwatch-mcp
  template:
    metadata:
      labels:
        app: cloudwatch-mcp
        component: mcp-server
        service: cloudwatch
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: cloudwatch-mcp
          image: 897729109735.dkr.ecr.us-east-1.amazonaws.com/jarvis/cloudwatch_mcp_server:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3334
              protocol: TCP
          env:
            # Authentication DISABLED - no user OIDC tokens required for testing
            - name: ENABLE_AUTH
              value: "false"

            # AWS Credentials - Use your existing user credentials
            # Option 1: Use AWS Profile (if credentials mounted as secret)
            - name: AWS_PROFILE
              value: "default"  # Or your profile name

            # Option 2: Use access keys directly (uncomment if using)
            # - name: AWS_ACCESS_KEY_ID
            #   valueFrom:
            #     secretKeyRef:
            #       name: aws-credentials
            #       key: access-key-id
            # - name: AWS_SECRET_ACCESS_KEY
            #   valueFrom:
            #     secretKeyRef:
            #       name: aws-credentials
            #       key: secret-access-key
            # - name: AWS_SESSION_TOKEN  # Optional, if using temporary credentials
            #   valueFrom:
            #     secretKeyRef:
            #       name: aws-credentials
            #       key: session-token

            # CloudWatch configuration
            - name: AWS_REGION
              value: "us-east-1"
            - name: CLOUDWATCH_MCP_SERVER_HOST
              value: "0.0.0.0"
            - name: CLOUDWATCH_MCP_PORT
              value: "3334"

            # Logging
            - name: FASTMCP_LOG_LEVEL
              value: "INFO"

          # Mount AWS credentials (if using AWS_PROFILE method)
          volumeMounts:
            - name: aws-credentials
              mountPath: /home/app/.aws
              readOnly: true

          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi

          livenessProbe:
            httpGet:
              path: /health
              port: 3334
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health
              port: 3334
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false

      # Mount AWS credentials from secret
      volumes:
        - name: aws-credentials
          secret:
            secretName: aws-credentials
            optional: true  # Make optional if using access keys instead

---
apiVersion: v1
kind: Service
metadata:
  name: cloudwatch-mcp
  namespace: jarvis-demo
  labels:
    app: cloudwatch-mcp
    component: mcp-server
    service: cloudwatch
spec:
  type: ClusterIP
  ports:
    - port: 3334
      targetPort: 3334
      protocol: TCP
      name: http
  selector:
    app: cloudwatch-mcp
