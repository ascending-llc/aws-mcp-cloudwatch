---
# CloudWatch MCP Server Deployment for Jarvis Demo
# Reference deployment manifest for kubectl-based deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudwatch-mcp
  namespace: jarvis-demo
  labels:
    app: cloudwatch-mcp
    component: mcp-server
    service: cloudwatch
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cloudwatch-mcp
  template:
    metadata:
      labels:
        app: cloudwatch-mcp
        component: mcp-server
        service: cloudwatch
    spec:
      serviceAccountName: cloudwatch-mcp-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: cloudwatch-mcp
          image: 897729109735.dkr.ecr.us-east-1.amazonaws.com/jarvis/cloudwatch_mcp_server:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3334
              protocol: TCP
          env:
            # Authentication
            - name: ENABLE_AUTH
              value: "true"

            # AWS IAM Identity Center configuration (from External Secrets)
            - name: AWS_IDENTITY_CENTER_REGION
              value: "us-east-1"
            - name: AWS_IDENTITY_CENTER_ISSUER
              valueFrom:
                secretKeyRef:
                  name: cloudwatch-mcp-secrets
                  key: AWS_IDENTITY_CENTER_ISSUER
            - name: AWS_IDENTITY_CENTER_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: cloudwatch-mcp-secrets
                  key: AWS_IDENTITY_CENTER_CLIENT_ID
            - name: AWS_CLOUDWATCH_ROLE_ARN
              valueFrom:
                secretKeyRef:
                  name: cloudwatch-mcp-secrets
                  key: AWS_CLOUDWATCH_ROLE_ARN

            # CloudWatch configuration
            - name: AWS_REGION
              value: "us-east-1"
            - name: CLOUDWATCH_MCP_SERVER_HOST
              value: "0.0.0.0"
            - name: CLOUDWATCH_MCP_PORT
              value: "3334"

            # Logging
            - name: FASTMCP_LOG_LEVEL
              value: "INFO"

          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi

          livenessProbe:
            httpGet:
              path: /health
              port: 3334
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health
              port: 3334
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false

---
apiVersion: v1
kind: Service
metadata:
  name: cloudwatch-mcp
  namespace: jarvis-demo
  labels:
    app: cloudwatch-mcp
    component: mcp-server
    service: cloudwatch
spec:
  type: ClusterIP
  ports:
    - port: 3334
      targetPort: 3334
      protocol: TCP
      name: http
  selector:
    app: cloudwatch-mcp

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudwatch-mcp-sa
  namespace: jarvis-demo
  annotations:
    # Uncomment and set your IAM role ARN for IRSA (IAM Roles for Service Accounts)
    # eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/cloudwatch-mcp-role

---
# External Secret for IAM Identity Center credentials
# This assumes you have External Secrets Operator installed in your cluster
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cloudwatch-mcp-secrets
  namespace: jarvis-demo
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: jarvis-env
    kind: SecretStore
  target:
    name: cloudwatch-mcp-secrets
    creationPolicy: Owner
  data:
    - secretKey: AWS_IDENTITY_CENTER_ISSUER
      remoteRef:
        key: AWS_IDENTITY_CENTER_ISSUER
    - secretKey: AWS_IDENTITY_CENTER_CLIENT_ID
      remoteRef:
        key: AWS_IDENTITY_CENTER_CLIENT_ID
    - secretKey: AWS_CLOUDWATCH_ROLE_ARN
      remoteRef:
        key: AWS_CLOUDWATCH_ROLE_ARN
